{"version":3,"file":"static/js/349.2e6d8305.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/object-assign/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-fast-compare/index.js","../node_modules/react-helmet/es/Helmet.js","../node_modules/react-side-effect/lib/index.js","../node_modules/style-to-object/src/index.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/devlop/lib/default.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","import PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport React from 'react';\nimport objectAssign from 'object-assign';\n\nvar ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\",\n    TARGET: \"target\"\n};\n\nvar REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = \"data-react-helmet\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return Array.isArray(innermostTitle) ? innermostTitle.join(\"\") : innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === TAG_PROPERTIES.INNER_HTML || attributeKey === TAG_PROPERTIES.CSS_TEXT || attributeKey === TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = objectAssign({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([TAG_PROPERTIES.HREF, TAG_PROPERTIES.TARGET], propsList),\n        bodyAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(TAG_NAMES.LINK, [TAG_PROPERTIES.REL, TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(TAG_NAMES.META, [TAG_PROPERTIES.NAME, TAG_PROPERTIES.CHARSET, TAG_PROPERTIES.HTTPEQUIV, TAG_PROPERTIES.PROPERTY, TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(TAG_NAMES.NOSCRIPT, [TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(TAG_NAMES.SCRIPT, [TAG_PROPERTIES.SRC, TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(TAG_NAMES.STYLE, [TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === TAG_PROPERTIES.INNER_HTML || attribute === TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [React.createElement(TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === TAG_PROPERTIES.INNER_HTML || mappedAttribute === TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return React.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case ATTRIBUTE_NAMES.BODY:\n        case ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            classCallCheck(this, HelmetWrapper);\n            return possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !isEqual(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case TAG_NAMES.SCRIPT:\n                case TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _babelHelpers$extends;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_babelHelpers$extends = {}, _babelHelpers$extends[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _babelHelpers$extends));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _babelHelpers$extends2, _babelHelpers$extends3;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_babelHelpers$extends2 = {}, _babelHelpers$extends2[child.type] = nestedChildren, _babelHelpers$extends2.titleAttributes = _extends({}, newChildProps), _babelHelpers$extends2));\n\n                case TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_babelHelpers$extends3 = {}, _babelHelpers$extends3[child.type] = _extends({}, newChildProps), _babelHelpers$extends3));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _babelHelpers$extends4;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_babelHelpers$extends4 = {}, _babelHelpers$extends4[arrayChildName] = arrayTypeChildren[arrayChildName], _babelHelpers$extends4));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return warn(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return warn(\"Only elements types \" + VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            React.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case TAG_NAMES.LINK:\n                    case TAG_NAMES.META:\n                    case TAG_NAMES.NOSCRIPT:\n                    case TAG_NAMES.SCRIPT:\n                    case TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return React.createElement(Component, newProps);\n        };\n\n        createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n             * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n             * @param {Object} bodyAttributes: {\"className\": \"root\"}\n             * @param {String} defaultTitle: \"Default Title\"\n             * @param {Boolean} defer: true\n             * @param {Boolean} encodeSpecialCharacters: true\n             * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n             * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n             * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n             * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n             * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n             * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n             * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n             * @param {String} title: \"Title\"\n             * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n             * @param {String} titleTemplate: \"MySite.com - %s\"\n             */\n            set: function set$$1(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n        return HelmetWrapper;\n    }(React.Component), _class.propTypes = {\n        base: PropTypes.object,\n        bodyAttributes: PropTypes.object,\n        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n        defaultTitle: PropTypes.string,\n        defer: PropTypes.bool,\n        encodeSpecialCharacters: PropTypes.bool,\n        htmlAttributes: PropTypes.object,\n        link: PropTypes.arrayOf(PropTypes.object),\n        meta: PropTypes.arrayOf(PropTypes.object),\n        noscript: PropTypes.arrayOf(PropTypes.object),\n        onChangeClientState: PropTypes.func,\n        script: PropTypes.arrayOf(PropTypes.object),\n        style: PropTypes.arrayOf(PropTypes.object),\n        title: PropTypes.string,\n        titleAttributes: PropTypes.object,\n        titleTemplate: PropTypes.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = mapStateOnServer({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = withSideEffect(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport default HelmetExport;\nexport { HelmetExport as Helmet };\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect =\n    /*#__PURE__*/\n    function (_PureComponent) {\n      _inheritsLoose(SideEffect, _PureComponent);\n\n      function SideEffect() {\n        return _PureComponent.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      // Expose canUseDOM so tests can monkeypatch it\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.PureComponent);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    _defineProperty(SideEffect, \"canUseDOM\", canUseDOM);\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","import parse from 'inline-style-parser';\nimport type { Declaration } from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","n","join","test3","split","forEach","letter","keys","shouldUseNative","from","symbols","to","undefined","toObject","s","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","a","b","it","size","entries","next","done","has","get","RegExp","flags","valueOf","$$typeof","message","console","warn","ATTRIBUTE_NAMES","TAG_NAMES","BASE","BODY","HEAD","HTML","LINK","META","NOSCRIPT","SCRIPT","STYLE","TITLE","TAG_PROPERTIES","REACT_TAG_MAP","accesskey","charset","class","contenteditable","contextmenu","itemprop","tabindex","HELMET_PROPS","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","_typeof","Symbol","iterator","createClass","defineProperties","descriptor","Constructor","protoProps","staticProps","_extends","objectWithoutProperties","indexOf","encodeSpecialCharacters","getTitleFromPropsList","propsList","innermostTitle","getInnermostProperty","innermostTemplate","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","concat","getTagsFromPropsList","tagName","approvedSeenTags","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","attributeKey","tagUnion","objectAssign","rafPolyfill","clock","Date","now","callback","currentTime","setTimeout","cafPolyfill","id","clearTimeout","requestAnimationFrame","window","bind","webkitRequestAnimationFrame","mozRequestAnimationFrame","global","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","_helmetCallback","commitTagChanges","newState","cb","baseTag","bodyAttributes","htmlAttributes","linkTags","metaTags","noscriptTags","onChangeClientState","scriptTags","styleTags","title","titleAttributes","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","attributes","document","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","splice","_i","removeAttribute","tags","headElement","head","querySelector","tagNodes","querySelectorAll","indexToDelete","newElement","createElement","innerHTML","styleSheet","cssText","appendChild","createTextNode","some","existingTag","index","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","attr","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","React","generateTitleAsReactComponent","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","mapStateOnServer","_ref","_ref$title","base","link","meta","noscript","script","HelmetExport","Component","_class","_temp","_React$Component","HelmetWrapper","instance","classCallCheck","self","ReferenceError","possibleConstructorReturn","apply","subClass","superClass","create","setPrototypeOf","__proto__","inherits","shouldComponentUpdate","nextProps","isEqual","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","_babelHelpers$extends","arrayTypeChildren","newChildProps","mapObjectTypeChildren","_ref2","_babelHelpers$extends2","_babelHelpers$extends3","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_babelHelpers$extends4","warnOnInvalidChildren","mapChildrenToProps","children","_this2","_child$props","initAttributes","convertReactPropstoHtmlAttributes","render","_props","set","canUseDOM","propTypes","defaultTitle","defer","titleTemplate","defaultProps","peek","rewind","mappedState","Helmet","withSideEffect","renderStatic","ex","React__default","_defineProperty","reducePropsToState","handleStateChangeOnClient","WrappedComponent","state","mountedInstances","emitChange","SideEffect","_PureComponent","recordedState","_proto","UNSAFE_componentWillMount","componentDidUpdate","componentWillUnmount","PureComponent","displayName","getDisplayName","inline_style_parser_1","__importDefault","styleObject","default","hasIterator","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","ownKeys","e","r","t","o","_objectSpread2","getOwnPropertyDescriptors","_regeneratorRuntime","asyncIterator","u","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","h","l","f","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","mark","awrap","async","pop","prev","stop","rval","handle","complete","finish","delegateYield","env","globalThis","deserialize","serialized","$","_","as","out","unpair","_$index","_slicedToArray","_step","_iterator","_createForOfIteratorHelper","_step2","_iterator2","_step2$value","_step3","_iterator3","_step3$value","_step4","_iterator4","add","BigInt","deserializer","EMPTY","typeOf","asString","includes","shouldSkip","_ref3","TYPE","serialize","_ref4","json","lossy","strict","pair","_typeOf","_typeOf2","entry","_toConsumableArray","toJSON","toISOString","serializer","structuredClone","parse","tokens","input","token","stringify","settings","padRight","padLeft","ok","unreachable","Schema","_createClass","normal","space","_classCallCheck","merge","definitions","own","definition","properties","DefinedInfo","transform","mustUseProperty","normalize","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","test","rest","camelcase","toUpperCase","dashes","kebab","$0","checks","types","_Info","_inherits","_super","_createSuper","_this","_assertThisInitialized","check","defined","powers","increment","Math","pow","nameRe","nameReJsx","emptyOptions","jsx","empty","hastToReact","StyleToObject","stringifyPosition","point","VFileMessage","_Error","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","_objectSpread","cause","ruleId","parent","fatal","file","stack","actual","expected","note","url","_wrapNativeSuper","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","pointStart","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","findComponentFromName","alignValue","createProperty","_result","createElementProps","createChildren","thing","addNode","addChildren","estree","expression","body","assert","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","Number","commas","spaces","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","all","remove","items","parameters","chunkStart","unshift","subtokenize","events","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","stream","previous","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","factorySpace","effects","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","eof","seen","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","_combined$key","_combined$key2","remarkParse","doc","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","counter","clobberPrefix","safeId","footnoteOrder","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","pointEnd","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","_excluded","unknownHandler","visit","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","_tail$children","tailTail","dataFootnotes","footer","remarkRehype","destination","_callee","hastTree","_context","run","_x","_x2","bail","trough","fns","pipeline","_len","_key","middlewareIndex","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","names","Processor","_CallableInstance","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","_this$attachers$this$","_toArray","transformer","freeze","realFile","vfile","assertParser","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","process","assertDone","assertNode","outputTree","resultingTree","addPlugin","addList","addPreset","_value","plugins","plugin","entryIndex","_parameters2","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","runSync","_parent$children","colon","questionMark","numberSign","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","finalResult","webNamespaces","mathml","fromParse5","verbose","nodeName","quirksMode","childNodes","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","_fn","currentSchema","doctype","publicId","systemId","CODE_POINTS","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","ERR","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","TokenType","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","onParseError","getError","nextCp","isSurrogatePair","_addGap","EOF","_err","surrogateInInputStream","willDropParsedChunk","substring","isLastChunk","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_processSurrogate","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","getTokenAttr","attrName","CharCodes","Uint16Array","decodeMap","_a","codePoint","replaceCodePoint","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","digitCount","substr","startIdx","UPPER_F","LOWER_F","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","startEntity","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEADER","HGROUP","HR","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","_SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","State","C1_CONTROLS_REFERENCE_REPLACEMENTS","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","EntryType","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_consume","_ensureHibernation","_callState","writeCallback","_runParsingLoop","insertHtmlAtCurrentPos","_unconsume","retreat","_advanceBy","START_TAG","tagID","selfClosing","ackSelfClosing","END_TAG","COMMENT","initialName","DOCTYPE","forceQuirks","chars","attrNameFirstCh","_leaveAttrValue","duplicateAttribute","ct","_emitCurrentCharacterToken","prepareToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","dropParsedChunk","onComment","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","onEof","ch","_createCharacterToken","NULL","_appendCharToCurrentCharacterToken","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_emitCodePoint","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","_emitEOFToken","_emitChars","_createStartTagToken","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","_createCommentToken","eofBeforeTagName","invalidFirstCharacterOfTagName","_createEndTagToken","missingEndTagName","emitCurrentTagToken","eofInTag","_cp","handleSpecialEndTag","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","_createAttr","_leaveAttrName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","emitCurrentComment","_consumeSequenceIfMatch","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","_createDoctypeToken","emitCurrentDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","_flushCodePointConsumedAsCharacterReference","_reconsumeInState","matchResult","_matchNamedCharacterReference","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","treeAdapter","tagIDs","stackTop","tmplCount","currentTagId","_isInTemplate","getTemplateContent","getNamespaceURI","onItemPush","popped","_updateCurrentElement","onItemPop","oldElement","idx","_indexOf","referenceElement","newElementID","insertionIdx","targetIdx","shortenToLength","tagNames","targetNS","_indexOfTagNames","popUntilPopped","clearBackTo","elementIdx","ns","exclusionId","MARKER","Marker","FormattingElementList","bookmark","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_getNoahArkConditionCandidates","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","_ensureNoahArkCondition","bookmarkIdx","markerIdx","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","_this$openElements","isHTML","_isIntegrationPoint","nextTokenizerState","_insertElement","TEXT","IN_BODY","TN","docTypeNode","_shouldFosterParentOnInsertion","_fosterParentElement","currentTmplContentOrNode","_attachElementToTree","tmpl","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","textNodeIdx","_token$location","donor","closingToken","ctLoc","endLoc","_this$openElements2","_processStartTag","foreignContent","listLength","findIndex","contains","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","popUntilTagNamePopped","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_insertCharacters","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","_appendCommentNode","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","_setDocumentType","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","_appendElement","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","_closeTableCell","startTagInCell","startTagInSelect","_resetInsertionMode","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","opts","documentMock","_initTokenizerForFragmentParsing","_insertFakeRootElement","_findFormInFragmentContext","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","_processToken","_insertFakeElement","_switchToTextParsing","_insertTemplate","insertMarker","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","_reconstructActiveFormattingElements","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","pushElement","bStartTagInBody","activeElementEntry","aStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","handleRaw","getFragmentParser","stitches","resetTokenizer","getFragment","stitch","toParse5","Token","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","rehypeRaw","convert","castFactory","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","tests","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse"],"sourceRoot":""}