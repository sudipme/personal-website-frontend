{"version":3,"file":"static/js/835.2d6d046b.chunk.js","mappings":"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Z,OAAOA,EAAQ8xB,YACnB,EACAirB,mBAAkB,SAACC,GACf,OAAOA,EAASv7E,KACpB,EACAw7E,sBAAqB,SAACC,GAClB,OAAOA,EAAYhkE,IACvB,EACAikE,wBAAuB,SAACpB,GACpB,OAAOA,EAAYz6E,IACvB,EACA87E,4BAA2B,SAACrB,GACxB,OAAOA,EAAY7oB,QACvB,EACAmqB,4BAA2B,SAACtB,GACxB,OAAOA,EAAY5oB,QACvB,EAEAkpB,WAAU,SAACt4E,GACP,MAAyB,UAAlBA,EAAKwtD,QAChB,EACA+rB,cAAa,SAACv5E,GACV,MAAyB,aAAlBA,EAAKwtD,QAChB,EACAgsB,mBAAkB,SAACx5E,GACf,MAAyB,kBAAlBA,EAAKwtD,QAChB,EACAisB,cAAa,SAACz5E,GACV,OAAO9D,OAAOC,UAAUC,eAAeS,KAAKmD,EAAM,UACtD,EAEA05E,0BAAyB,SAAC15E,EAAMstD,GAC5BttD,EAAKiuD,mBAAqBX,CAC9B,EACAqsB,0BAAyB,SAAC35E,GACtB,OAAOA,EAAKiuD,kBAChB,EACA2rB,6BAA4B,SAAC55E,EAAM65E,GAC/B75E,EAAKiuD,oBAAkBx1B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQz4B,EAAKiuD,oBAAuB4rB,EAC/D,GCzKEC,GAAqB,OACrBC,GAAkB,sBAClBC,GAAwB,6DACxBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,GAAH/sE,OAC1C8sE,GAA8B,CACjC,mCACA,yCAEEE,GAAyB,IAAIvvE,IAAI,CACnC,uCACA,qCA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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/style-to-object/src/index.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/devlop/lib/default.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","import parse from 'inline-style-parser';\nimport type { Declaration } from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","inline_style_parser_1","__importDefault","require","iterator","styleObject","default","hasIterator","forEach","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","args","apply","undefined","_defineProperty","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_regeneratorRuntime","n","Symbol","a","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","reverse","pop","prev","stop","rval","handle","complete","finish","delegateYield","env","globalThis","deserialize","serialized","$","_","as","out","index","set","unpair","has","get","_$index","_slicedToArray","_step","_iterator","_createForOfIteratorHelper","_step2","object","_iterator2","_step2$value","Date","flags","RegExp","_step3","map","Map","_iterator3","_step3$value","_step4","Set","_iterator4","add","message","BigInt","deserializer","EMPTY","typeOf","asString","includes","shouldSkip","_ref2","_ref3","TYPE","serialize","_ref4","json","lossy","strict","pair","_typeOf","_typeOf2","entry","_toConsumableArray","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","parse","tokens","input","String","indexOf","token","stringify","settings","concat","join","padRight","padLeft","ok","unreachable","Schema","_createClass","normal","space","_classCallCheck","merge","definitions","assign","own","definition","properties","DefinedInfo","transform","attributes","mustUseProperty","normalize","attribute","xlink","toLowerCase","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","alt","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","test","rest","camelcase","toUpperCase","dashes","kebab","$0","checks","types","_Info","_inherits","_super","_createSuper","_this","_assertThisInitialized","check","defined","powers","increment","Math","pow","nameRe","nameReJsx","emptyOptions","jsx","empty","hastToReact","StyleToObject","stringifyPosition","point","VFileMessage","_Error","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","_objectSpread","cause","ruleId","parent","fatal","file","stack","actual","expected","note","url","_wrapNativeSuper","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","children","pointStart","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","_result","createElementProps","createChildren","child","thing","addNode","addChildren","element","estree","expression","body","assert","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","Number","commas","spaces","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","isIdentifierName","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","all","splice","remove","items","parameters","chunkStart","unshift","subtokenize","events","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","stream","previous","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","current","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","nok","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","head","shift","sliceChunks","_point","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","_document","_flowInitial","_flow","_string","_text","resolveText","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","_combined$key","_combined$key2","remarkParse","doc","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","counter","clobberPrefix","safeId","footnoteOrder","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","pointEnd","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","passThrough","shallow","_excluded","unknownHandler","visit","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","_tail$children","tailTail","dataFootnotes","footer","remarkRehype","destination","_ref","_callee","hastTree","_context","run","_x","_x2","bail","trough","fns","pipeline","_len","_key","middlewareIndex","callback","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","func","names","getOwnPropertyNames","descriptor","Processor","_CallableInstance","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","_this$attachers$this$","_toArray","transformer","freeze","realFile","vfile","assertParser","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","process","assertDone","assertNode","outputTree","resultingTree","addPlugin","addList","addPreset","_value","plugins","plugin","entryIndex","_parameters2","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","runSync","_parent$children","colon","questionMark","numberSign","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","finalResult","webNamespaces","mathml","fromParse5","location","verbose","nodeName","quirksMode","childNodes","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","_fn","currentSchema","parentNode","doctype","publicId","systemId","CODE_POINTS","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","ERR","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","TokenType","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","onParseError","getError","nextCp","isSurrogatePair","_addGap","EOF","_err","surrogateInInputStream","willDropParsedChunk","substring","isLastChunk","startsWith","CARRIAGE_RETURN","LINE_FEED","advance","_processSurrogate","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","getTokenAttr","attrName","CharCodes","Uint16Array","decodeMap","_a","codePoint","replaceCodePoint","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","digitCount","substr","startIdx","UPPER_F","LOWER_F","addToNumericResult","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","startEntity","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","_SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","State","C1_CONTROLS_REFERENCE_REPLACEMENTS","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","EntryType","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_consume","_ensureHibernation","_callState","writeCallback","_runParsingLoop","insertHtmlAtCurrentPos","_unconsume","retreat","_advanceBy","START_TAG","tagID","selfClosing","ackSelfClosing","END_TAG","COMMENT","initialName","DOCTYPE","forceQuirks","chars","attrNameFirstCh","_leaveAttrValue","duplicateAttribute","ct","_emitCurrentCharacterToken","prepareToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","dropParsedChunk","onComment","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","onEof","ch","_createCharacterToken","NULL","_appendCharToCurrentCharacterToken","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","peek","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_emitCodePoint","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","_emitEOFToken","_emitChars","_createStartTagToken","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","_createCommentToken","eofBeforeTagName","invalidFirstCharacterOfTagName","_createEndTagToken","missingEndTagName","emitCurrentTagToken","eofInTag","_cp","handleSpecialEndTag","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","_createAttr","_leaveAttrName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","emitCurrentComment","_consumeSequenceIfMatch","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","_createDoctypeToken","emitCurrentDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","_flushCodePointConsumedAsCharacterReference","_reconsumeInState","matchResult","_matchNamedCharacterReference","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","treeAdapter","tagIDs","stackTop","tmplCount","currentTagId","_isInTemplate","getTemplateContent","getNamespaceURI","onItemPush","popped","_updateCurrentElement","onItemPop","oldElement","newElement","idx","_indexOf","referenceElement","newElementID","insertionIdx","targetIdx","shortenToLength","tagNames","targetNS","_indexOfTagNames","popUntilPopped","clearBackTo","elementIdx","ns","exclusionId","MARKER","Marker","FormattingElementList","bookmark","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_getNoahArkConditionCandidates","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","_ensureNoahArkCondition","Element","bookmarkIdx","markerIdx","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","_this$openElements","isHTML","_isIntegrationPoint","nextTokenizerState","_insertElement","TEXT","IN_BODY","TN","docTypeNode","_shouldFosterParentOnInsertion","_fosterParentElement","currentTmplContentOrNode","_attachElementToTree","tmpl","beforeElement","_this$_findFosterPare","_findFosterParentingLocation","textNodeIdx","_token$location","donor","closingToken","ctLoc","endLoc","_this$openElements2","_processStartTag","foreignContent","_this2","listLength","findIndex","contains","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","generateImpliedEndTagsWithExclusion","popUntilTagNamePopped","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_insertCharacters","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","IN_TEMPLATE","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","_appendCommentNode","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","_setDocumentType","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","shouldProcessStartTagTokenInForeignContent","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","_getAdjustedCurrentElement","currentNs","adjustedTagName","_appendElement","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","hasInTableScope","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","_closeTableCell","startTagInCell","startTagInSelect","_resetInsertionMode","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","isRootHtmlElementCurrent","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","opts","documentMock","_initTokenizerForFragmentParsing","_insertFakeRootElement","_findFormInFragmentContext","aaObtainFormattingElementEntry","formattingElementEntry","getElementEntryInScopeWithTagName","hasInScope","removeEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","_isSpecialElement","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","_processToken","_insertFakeElement","_switchToTextParsing","_insertTemplate","insertMarker","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","_reconstructActiveFormattingElements","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","pushElement","bStartTagInBody","activeElementEntry","aStartTagInBody","hasInButtonScope","_closePElement","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","tryPeekProperlyNestedBodyElement","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","popAllUpToHtmlElement","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","hasInListItemScope","liEndTagInBody","ddEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","clearBackToTableContext","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","handleRaw","getFragmentParser","stitches","resetTokenizer","getFragment","stitch","toParse5","tag","Token","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","rehypeRaw","convert","castFactory","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","tests","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse"],"sourceRoot":""}