{"version":3,"file":"static/js/937.0308b5e7.chunk.js","mappings":"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","sources":["components/ProjectsCardGrid.js","config.js","pages/ProjectsPage.js"],"sourcesContent":["import React from \"react\";\nimport \"../css/ProjectsCardGrid.css\";\nimport { BaseUrl, ApiBaseUrl } from \"../config.js\";\n\nfunction ProjectCard(props) {\n  const containerStyle = {\n    height: \"175px\",\n    borderRadius: \"20px\",\n    border: \"0.5px solid rgba(0, 0, 0, 0.1)\",\n    background: \"#323232\",\n    filter: \"drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.20))\",\n    cursor: \"pointer\",\n    overflow: \"hidden\",\n  };\n  const titleStyle = {\n    textAlign: \"left\",\n    marginLeft: \"30px\",\n    marginBottom: \"10px\",\n    color: \"#FFF\",\n    fontFamily: \"Exo, sans-serif\",\n    fontSize: \"20px\",\n    fontStyle: \"normal\",\n    fontWeight: 500,\n    lineHeight: \"normal\",\n  };\n  const descriptionStyle = {\n    marginLeft: \"30px\",\n    textAlign: \"left\",\n    color: \"#ccc\",\n    fontFamily: \"Exo, sans-serif\",\n    fontSize: \"14px\",\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    lineHeight: \"normal\",\n  };\n\n  return (\n    <div\n      onClick={() => (window.location.href = props.link)}\n      className=\"project-card\"\n      style={containerStyle}\n    >\n      <h3 id=\"project-title\" style={titleStyle}>\n        {props.title}\n      </h3>\n      <p id=\"project-desctiption\" style={descriptionStyle}>\n        {props.description}\n      </p>\n    </div>\n  );\n}\n\nfunction ProjectsCardGrid(props) {\n  const { projects } = props;\n\n  if (projects === null) {\n    return <div>Loading...</div>;\n  }\n\n  if (!projects || Object.keys(projects).length === 0) {\n    return <div>No data available</div>;\n  }\n\n  const gridStyle = {\n    display: \"grid\",\n    rowGap: \"25px\",\n    columnGap: \"25px\",\n    overflow: \"hidden\",\n  };\n\n  return (\n    <div id=\"grid\" style={gridStyle}>\n      {Object.keys(props.projects).map((key) => {\n        const widget = props.projects[key];\n        return (\n          <ProjectCard\n            key={widget.time_stamp}\n            link={BaseUrl + \"projects/\" + widget.project_id}\n            title={widget.project_title}\n            description={widget.project_description}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ProjectsCardGrid;\n","export const BaseUrl = \"https://sudip.me/\";\nexport const ApiBaseUrl = \"https://api.sudip.me/\";\n","import React, { useState, useEffect } from \"react\";\nimport { ApiBaseUrl } from \"../config.js\";\nimport ProjectsCardGrid from \"../components/ProjectsCardGrid.js\";\nimport LoadingAnimation from \"../components/LoadingAnimation.js\";\nimport \"../css/ProjectsPage.css\";\n\nfunction ProjectsPage() {\n  const [projects, setProjects] = useState(null);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const updateWindowWidth = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWindowWidth);\n    fetch(ApiBaseUrl + \"projects-page/\" + pageNumber)\n      .then((response) => response.json())\n      .then((data) => {\n        setProjects(data.projects);\n        setTotalPages(data.total_pages);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n\n    return () => {\n      window.removeEventListener(\"resize\", updateWindowWidth);\n    };\n  }, [pageNumber]);\n\n  const projectsContainerStyle = {\n    backgroundColor: \"rgba(8,8,8)\",\n    minHeight: \"100vh\",\n  };\n\n  const loadingAnimationContainerStyle = {\n    width: \"100vw\",\n    height: \"calc(100vh - 165px)\",\n    backgroundColor: \"rgba(8,8,8)\"\n  };\n\n  return (\n    <div style={projectsContainerStyle}>\n      <div id=\"projects-page-container\">\n        {projects === null ? (\n          <div style={loadingAnimationContainerStyle}>\n            {\" \"}\n            <LoadingAnimation />{\" \"}\n          </div>\n        ) : (\n          <div id=\"projects-container\">\n            <ProjectsCardGrid windowWidth={windowWidth} projects={projects} />\n          </div>\n        )}\n        <div id=\"pagination-container\">\n          <button\n            className=\"pagination-button\"\n            onClick={() => setPageNumber(pageNumber - 1)}\n            disabled={pageNumber === 0}\n          >\n            Previous\n          </button>\n          <h3 id=\"page-counter\">\n            ({pageNumber + 1} / {totalPages} )\n          </h3>\n          <button\n            className=\"pagination-button\"\n            onClick={() => setPageNumber(pageNumber + 1)}\n            disabled={pageNumber + 1 === totalPages}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectsPage;\n"],"names":["ProjectCard","props","_jsxs","onClick","window","location","href","link","className","style","height","borderRadius","border","background","filter","cursor","overflow","children","_jsx","id","textAlign","marginLeft","marginBottom","color","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","title","description","projects","Object","keys","length","display","rowGap","columnGap","map","key","widget","BaseUrl","project_id","project_title","project_description","time_stamp","ApiBaseUrl","_useState","useState","_useState2","_slicedToArray","setProjects","_useState3","_useState4","pageNumber","setPageNumber","_useState5","_useState6","totalPages","setTotalPages","_useState7","innerWidth","_useState8","windowWidth","setWindowWidth","updateWindowWidth","useEffect","addEventListener","fetch","then","response","json","data","total_pages","catch","error","console","removeEventListener","backgroundColor","minHeight","width","LoadingAnimation","ProjectsCardGrid","disabled"],"sourceRoot":""}